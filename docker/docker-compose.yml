version: '3.8'

services:
  postgres:
    image: postgres:17.5-bookworm
    container_name: multi-tenant-postgres
    restart: unless-stopped
    environment:
      # Database configuration
      POSTGRES_DB: ${POSTGRES_DB:-multi_tenant_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      # REQUIRED: Set POSTGRES_PASSWORD in .env file - no default for security
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      
      # PostgreSQL configuration for development
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      
      # Timezone configuration
      TZ: ${TZ:-UTC}
      PGTZ: ${PGTZ:-UTC}
    
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      
      # Custom PostgreSQL configuration
      # - ./postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      
      # Initialization scripts (optional)
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
      
      # Shared memory for PostgreSQL
      - /dev/shm:/dev/shm
    
    command: >
      postgres
      -c row_security=on
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=0
      -c hba_file=/var/lib/postgresql/data/pg_hba.conf
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-multi_tenant_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    networks:
      - multi-tenant-network
    
    # Resource limits for development
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Optional: pgAdmin for database administration
  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: multi-tenant-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@localhost.com}
      # REQUIRED: Set PGADMIN_PASSWORD in .env file - no default for security  
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    
    depends_on:
      postgres:
        condition: service_healthy
    
    networks:
      - multi-tenant-network
    
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
    name: multi_tenant_postgres_data
  
  pgadmin_data:
    driver: local
    name: multi_tenant_pgadmin_data

networks:
  multi-tenant-network:
    driver: bridge
    name: multi-tenant-network